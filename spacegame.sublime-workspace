{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"start",
				"startCov(  )\tVoid"
			],
			[
				"Term",
				"TerminalScreen"
			],
			[
				"to",
				"toLowerCase(  )\tString"
			],
			[
				"flxc",
				"FlxColor\tflixel.util"
			],
			[
				"Psh",
				"Pshipstop\tObjects"
			],
			[
				"cut",
				"cutscene1"
			],
			[
				"spac",
				"Spacestation"
			],
			[
				"en",
				"endgame1"
			],
			[
				"attack",
				"attack3_wait1\tfunction"
			],
			[
				"attac",
				"attack3_wait1"
			],
			[
				"coc",
				"Cockwindow"
			],
			[
				"att",
				"attack3_wait\tfunction"
			],
			[
				"GR",
				"GREEN\tflixel.util.FlxColor"
			],
			[
				"P",
				"PURPLE\tflixel.util.FlxColor"
			],
			[
				"flx",
				"FlxColor"
			],
			[
				"cu",
				"currentRoom"
			],
			[
				"pixel",
				"pixelDistance( Other : Object )\tInt"
			],
			[
				"sw",
				"switchState(...)\tVoid"
			],
			[
				"ch",
				"characterResponds"
			],
			[
				"ter",
				"TerminalScreen"
			],
			[
				"gam",
				"Game\tclass"
			],
			[
				"Halw",
				"Hallway5"
			],
			[
				"locke",
				"lockedText\tString"
			],
			[
				"pow",
				"Powerpc\tclass"
			],
			[
				"Hall",
				"Hallway2"
			],
			[
				"Ter",
				"TerminalScreen\tclass"
			],
			[
				"Power",
				"Powerpc\tclass"
			],
			[
				"Pow",
				"Powerpc\tclass"
			],
			[
				"wak",
				"walkTo(...)\tVoid"
			],
			[
				"st",
				"state\tflixel.FlxState"
			],
			[
				"gen",
				"generator"
			],
			[
				"Good",
				"Goodbye"
			],
			[
				"op",
				"op2_3"
			],
			[
				"Smu",
				"Schmuggler"
			],
			[
				"open",
				"Opened\tBool"
			],
			[
				"Ca",
				"Captinsroom"
			],
			[
				"newPlayer",
				"newPlayerY\tInt"
			],
			[
				"Ha",
				"Hallway2"
			],
			[
				"new",
				"newRoom"
			],
			[
				"fun",
				"Function\tflash.utils"
			],
			[
				"im",
				"images"
			],
			[
				"obj",
				"Object"
			],
			[
				"_",
				"_right\tvar"
			],
			[
				"fl",
				"FlxG\tflixel"
			]
		]
	},
	"buffers":
	[
		{
			"file": "source/Main.hx",
			"settings":
			{
				"buffer_size": 218,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "source/MenuState.hx",
			"settings":
			{
				"buffer_size": 405,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "source/TerminalScreen.hx",
			"settings":
			{
				"buffer_size": 7099,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "source/Definitions.hx",
			"settings":
			{
				"buffer_size": 9331,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "usage.txt",
			"settings":
			{
				"buffer_size": 2762,
				"line_ending": "Windows"
			}
		},
		{
			"file": "source/Speech.hx",
			"settings":
			{
				"buffer_size": 2140,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"contents": "package;\nusing Definitions;\nusing Objects;\nusing Characters;\nusing Game;\nusing Lambda;\nusing Reflect;\nusing Type;\nimport flixel.FlxG;\nimport flixel.util.FlxColor;\n\nclass Hallway1 extends Room{\n    public function new(){\n        super();\n    }\n    override public function create (){\n        objects = [new RoomTrigger(120,\"Hallway2\",0,15),\n                        new RightDoor (106,0),\n                        new LeftDoor(-11,0),\n                        new ShipDoor(20,8,\"Captinsroom\", 112,29),\n                        new Player(0,0),\n                        new Block(7),\n                        new Table(59,21),\n                        new Tv(59,8)];\n    }\n}\n\nclass Hallway2 extends Room{\n    public function new(){\n        super();\n    }\n    override public function create(){\n        objects = [new LeftDoor(-11,0),\n                    new Player(15,15),\n                    new ShipDoor(29,8,\"Cargo\",20,33),\n                    new RightDoor (106,0),\n                    new RoomTrigger(120,\"Hallway3\",0,15),\n                    new RoomTrigger(-10,\"Hallway1\",100,15),\n                    new Rust1(78,24)];\n    }\n}\n\nclass Hallway3 extends Room{\n    public function new(){\n        super();\n    }\n    override public function create(){\n        objects = [new Player(0,0),\n                        new RoomTrigger(-10,\"Hallway2\",100,15),\n                        new RightDoor (106,0),\n                        new LeftDoor(-11,0),\n                        new RoomTrigger(120,\"Hallway4\",0,15),\n                        new Window1(36,8),\n                        new Rust2(16,1)];\n\n    }\n}\n\n\nclass Hallway4 extends Room{\n    public function new (){\n        super();\n    }\n    override public function create (){\n        objects = [new Player(0,0),\n        new RoomTrigger(-10,\"Hallway3\",100,15),\n        new RoomTrigger(120,\"Hallway5\",0,15),\n        new Manhole(66,16),\n        new RightDoor (106,0),\n        new LeftDoor(-11,0),\n        new Window2(22,5),\n        new Sign(67,9)\n        ];\n    }\n}\n\nclass Hallway5 extends Room {\n\n    public function new() {\n        super();\n    }\n\n    override public function create() {\n        objects = [new LeftDoor(-11,0),\n                  new Sodsbury(80,20),\n                   new Player(15,15),\n                   new Cocksign(65,13),\n                   new RoomTrigger(-10,\"Hallway4\",100,15),\n                   new RightDoor (106,0),\n                   new Block(116),\n                   new Cockdoor(43,8, \"Cockpit\",17,14),\n                   new Crate3(78,10)];\n    }\n    function enter() {\n        //getCharacter(\"Sodsbury\").walkToObject(\"player\");\n    }\n\n}\n\nclass Cargo extends Room{\n    public function new(){\n        super();\n    }\n\n    override public function create (){\n        objects = [ new Player(128,32),\n                    new Crewmember(4,34),\n                    new Crate(106,39),\n                    new ShipDoor(17,25,\"Hallway2\",31,15),\n                    new Baydoor(42,6),\n                    new Crate2(128,20),\n                    new Block(2),\n                    new Block(147),\n                    new Fadein(0,0)];\n    }\n\n}\n\nclass Captinsroom extends Room{\n    public function new(){\n        super();\n    }\n    override public function create (){\n        objects = [new Player(0,0),\n                    new ShipDoor(103,22, \"Hallway1\",29,15),\n                    new Terminal(38,25),\n                    new Block (133),\n                    new Block(8),\n                    new Sleepingpod(4,9),];\n    }\n}\n\nclass Powerroom extends Room{\n    public function new(){\n        super();\n    }\n    override public function create (){\n        objects = [new Player(0,0),\n                    new Powerpc(140,67),\n                    new Ladder(168,2),\n                    new Powercrate(180,53),\n                    new Block(192),\n                    new Block(139),\n\n        ];\n    }\n\n}\n\nclass Cockpit extends Room{\n    public function new(){\n        super();\n    }\n    override public function create (){\n        objects = [new Player(1,1),\n                    new ShipDoor(14,7,\"Hallway5\",46,16),\n                    new Railing(4,27),\n                    new Cockpc(75,17),\n                    new Block (1),\n                    new Block(76)];\n    }\n    function enter (){\n        if (game._underattack == true){\n            addObject(new Cockwindow(86,0));\n            cast(get(\"ShipDoor\"),ShipDoor).locked=true;\n            cast(get(\"Controls\"), Cockpc).startCov();\n        }\n    }\n}\n\nclass Spacebattle extends Room{\n    var _rp:Objects.Endingchar;\n    public var _psstop:Pshipstop ; \n    public function new(){\n        super();\n        origin.x = 0;\n        loadGraphic(\"assets/images/spacebattle.png\", true, 195, 88);\n        animation.add(\"go\", [0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31],4,false);\n        animation.add(\"stop\",[31],0);\n        animation.add(\"start\",[0],0);\n        animation.play(\"start\");\n        updateHitbox();\n        layer = FORE;\n        x = roomPos(0,0).x;\n        y = roomPos(0,0).y;\n    }\n\n\n    override public function create(){\n        objects = [new Player(1,1),\n                    new Spacestation(124,4),\n                    new FadeinSpace(0,0),\n                    new Pship(32,16),\n                    new Pshipstop(143,25),\n                    new Spaceframe(0,0),\n                   new Ecutscene(0,0),\n                   new Endingchar(95,43)\n\n        ];\n    }\n    function cutscene8(){\n        _rp.say(\"'More on this story at 8'\", FlxColor.RED);\n    }\n    function cutscene7(){\n        _rp.say(\"'We all owe Captain Gunn a massive thanks for being brave, a real life hero by his own accounts'\",FlxColor.RED);\n        wait(5,cutscene8);\n    }\n    function cutscene6(){\n        _rp.say(\"'Tommy Gunn, snuck onto the Captain's ship with the intent on bringing his rain of terror to an end.'\",FlxColor.RED);\n        wait(5,cutscene7);\n    }\n\n    function cutscene5(){\n        _rp = cast(currentRoom.get(\"EndingChar\"),Endingchar);\n        _rp.say(\"'Breaking News renowed pirate Captain Schmuggler was defeated todo along\",FlxColor.RED);\n        _rp.say(\" with the rest of his crew in 1 on 1 combat with a humnoid today'\",FlxColor.RED);\n        wait (5,cutscene6);\n    }\n    function cutscene4(){\n        cast(get(\"Ecutscene\"),Ecutscene)._fadeout = true;\n        wait(3,cutscene5);\n    }\n\n    function cutscene3(){\n        _psstop.say(\"a honset life\");\n        wait(3,cutscene4);\n    }\n    function cutscene2(){\n        _psstop.say(\"I guess I can start that new life I wanted\");\n        wait (3, cutscene3);\n\n    }\n    function cutscene1 (start){\n        _psstop = cast(currentRoom.get(\"pshipstop\"),Pshipstop);\n        animation.finishCallback = null;\n        animation.play(\"stop\");\n        _psstop.say(\"What do I do now?\");\n        wait(3,cutscene2);\n    }\n    function cutscene(){\n        animation.play(\"go\");\n        animation.finishCallback = cutscene1;\n\n    }\n\n  public  function Enterspace (){\n    var _ps=cast(currentRoom.get(\"pship\"),Pship);\n    if (cast(currentRoom.get(\"fadeinspace\"),FadeinSpace).done == true){\n        _ps.say(\"I guess I just jam this screw driver into here, and go?\",null,5);\n        FlxG.camera.shake(0.005,1);\n        game.canInteract = false;\n        wait(5,cutscene);\n        }\n    } \n\n}\n\n\n\n\nclass Bedroom extends Room{\n    public function new(){\n        super();\n    }\n    override public function create (){\n        objects = [new Player(40,22),\n                    new Bedroompc(10,22),\n                    new Bedroomcrate(83,10),\n                    new Lucaslena(15,7),\n                    new Bed(55,30),\n                    new Poster1(6,8),\n                    new Bedtrigger(95,38),\n                    new Block(98),\n                    new Block(1),\n                    new Cutcreen(0,0),\n                    new Person1(48,23),\n                    new Person2(61,21),\n                    new Person3(12,23),\n                    new Person4(50,33),\n                    new Person5(50,6)\n        ];\n    }\n}\n\nclass Cutscreen extends Room{\n    function new (){\n        super();\n    }\n    override public function create (){\n        objects = [new Player (1,1),\n\n        ];\n    }\n}\n\n",
			"file": "source/Rooms.hx",
			"file_size": 8444,
			"file_write_time": 131237159664432985,
			"settings":
			{
				"buffer_size": 8185,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "source/Objects.hx",
			"settings":
			{
				"buffer_size": 27292,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"contents": "Todo\n\n//Captins Room Rework\n//Hammer Used on - Table, TV,\n//Dead Sodsbury Text\n//Walkto Manhole\n\t//Screwdriver\n//Screw Driver on - //PowerPC, //BayDoor, //TV, //Captin Terminal\n//Screw Driver Animation?\n\t//After Attack\n//Entering Cockpit locks the door behind\n//Starts the convosation with the eneimey\n\n//Ending News cut scene\n\n\nLexi - Hide Door Names\nLexi -Fix game crashing when covosation is happening when room switchs\nSounds/Music - Jamie",
			"file": "source/Todo",
			"file_size": 444,
			"file_write_time": 131237090721311025,
			"settings":
			{
				"buffer_size": 443,
				"encoding": "UTF-8",
				"line_ending": "Windows",
				"name": "Todo"
			}
		},
		{
			"file": "source/Characters.hx",
			"settings":
			{
				"buffer_size": 9177,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "source/Countdown.hx",
			"settings":
			{
				"buffer_size": 1194,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "source/Game.hx",
			"settings":
			{
				"buffer_size": 5284,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		}
	],
	"build_system": "",
	"build_system_choices":
	[
	],
	"build_varint": "",
	"command_palette":
	{
		"height": 392.0,
		"last_filter": "Package Control: install",
		"selected_items":
		[
			[
				"Package Control: install",
				"Package Control: Install Package"
			],
			[
				"Package Control: instal",
				"Package Control: Install Package"
			]
		],
		"width": 432.0
	},
	"console":
	{
		"height": 146.0,
		"history":
		[
			"import urllib2,os,hashlib; h = 'df21e130d211cfc94d9b0905775a7c0f' + '1e3d39e33b79698005270310898eea76'; pf = 'Package Control.sublime-package'; ipp = sublime.installed_packages_path(); os.makedirs( ipp ) if not os.path.exists(ipp) else None; urllib2.install_opener( urllib2.build_opener( urllib2.ProxyHandler()) ); by = urllib2.urlopen( 'http://packagecontrol.io/' + pf.replace(' ', '%20')).read(); dh = hashlib.sha256(by).hexdigest(); open( os.path.join( ipp, pf), 'wb' ).write(by) if dh == h else None; print('Error validating download (got %s instead of %s), please try manual install' % (dh, h) if dh != h else 'Please restart Sublime Text to finish installation')",
			"import urllib.request,os,hashlib; h = 'df21e130d211cfc94d9b0905775a7c0f' + '1e3d39e33b79698005270310898eea76'; pf = 'Package Control.sublime-package'; ipp = sublime.installed_packages_path(); urllib.request.install_opener( urllib.request.build_opener( urllib.request.ProxyHandler()) ); by = urllib.request.urlopen( 'http://packagecontrol.io/' + pf.replace(' ', '%20')).read(); dh = hashlib.sha256(by).hexdigest(); print('Error validating download (got %s instead of %s), please try manual install' % (dh, h)) if dh != h else open(os.path.join( ipp, pf), 'wb' ).write(by)"
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"expanded_folders":
	[
		"/C/Users/jacks/Documents/spacegame",
		"/C/Users/jacks/Documents/spacegame/source",
		"/C/HaxeToolkit/haxe/lib/flixel/4,2,0"
	],
	"file_history":
	[
		"/C/Users/jacks/Documents/spacegame/source/EndGameState.hx",
		"/C/Users/jacks/Documents/spacegame/source/WinGameState.hx",
		"/C/Users/jacks/Documents/spacegame/source/Rooms.hx",
		"/C/Users/jacks/Documents/spacegame/source/Game.hx",
		"/C/Users/jacks/Documents/spacegame/source/Inventory.hx",
		"/C/Users/jacks/Documents/spacegame/source/Speech.hx",
		"/C/Users/jacks/Documents/spacegame/source/R.hx",
		"/C/Users/jacks/Documents/spacegame/source/Characters.hx",
		"/C/Users/jacks/Documents/spacegame/spacegame.sublime-project",
		"/D/Downloads/Sublime Text 3 - Build 3083/Readme.txt"
	],
	"find":
	{
		"height": 34.0
	},
	"find_in_files":
	{
		"height": 90.0,
		"where_history":
		[
			"C:\\Users\\jacks\\Documents\\spacegame\\source",
			"*.txt,C:\\Users\\jacks\\Documents\\spacegame\\source"
		]
	},
	"find_state":
	{
		"case_sensitive": false,
		"find_history":
		[
			"cut",
			"rp",
			"_ending",
			"report",
			"_rp",
			"scene",
			"ending",
			"cut",
			"cockpc",
			"ending",
			"powerpc",
			"power",
			"screw",
			"shipdoo",
			"shipdoor",
			"lock",
			"its",
			"powerOn",
			"poweron",
			"power",
			"powerpc",
			"_shi",
			"_ship",
			"\"sodsbury\"",
			"sodsbury",
			"o.n",
			"doesnt",
			"hammer",
			"ship is",
			"ship un",
			"Smugger",
			"cast",
			"smallobje",
			"cargo cont",
			"pshi",
			"cast",
			"var",
			"fadin",
			"hammer",
			"block",
			"fade",
			"spaceb",
			"enter",
			"tilex",
			"move1",
			"_warning",
			"what",
			"power",
			"animatio",
			"cock",
			"default",
			"cock",
			"dead",
			"dr",
			"player",
			"());\n",
			"members"
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": false,
		"replace_history":
		[
			"\"Sodsbury\"",
			"Sodsbury",
			"objects"
		],
		"reverse": false,
		"show_context": true,
		"use_buffer2": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"selected": 8,
			"sheets":
			[
				{
					"buffer": 0,
					"file": "source/Main.hx",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 218,
						"regions":
						{
						},
						"selection":
						[
							[
								217,
								217
							]
						],
						"settings":
						{
							"haxe-build-id": 0,
							"syntax": "Packages/Haxe/Haxe.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 10,
					"type": "text"
				},
				{
					"buffer": 1,
					"file": "source/MenuState.hx",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 405,
						"regions":
						{
						},
						"selection":
						[
							[
								241,
								241
							]
						],
						"settings":
						{
							"haxe-build-id": 0,
							"syntax": "Packages/Haxe/Haxe.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 9,
					"type": "text"
				},
				{
					"buffer": 2,
					"file": "source/TerminalScreen.hx",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 7099,
						"regions":
						{
						},
						"selection":
						[
							[
								3632,
								3632
							]
						],
						"settings":
						{
							"haxe-build-id": 0,
							"syntax": "Packages/Haxe/Haxe.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 1647.0,
						"zoom_level": 1.0
					},
					"stack_index": 8,
					"type": "text"
				},
				{
					"buffer": 3,
					"file": "source/Definitions.hx",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 9331,
						"regions":
						{
						},
						"selection":
						[
							[
								2804,
								2804
							]
						],
						"settings":
						{
							"haxe-build-id": 0,
							"syntax": "Packages/Haxe/Haxe.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 1218.0,
						"zoom_level": 1.0
					},
					"stack_index": 5,
					"type": "text"
				},
				{
					"buffer": 4,
					"file": "usage.txt",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2762,
						"regions":
						{
						},
						"selection":
						[
							[
								1291,
								1291
							]
						],
						"settings":
						{
							"syntax": "Packages/Text/Plain text.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 14.0,
						"zoom_level": 1.0
					},
					"stack_index": 7,
					"type": "text"
				},
				{
					"buffer": 5,
					"file": "source/Speech.hx",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2140,
						"regions":
						{
						},
						"selection":
						[
							[
								631,
								631
							]
						],
						"settings":
						{
							"haxe-build-id": 0,
							"syntax": "Packages/Haxe/Haxe.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 4,
					"type": "text"
				},
				{
					"buffer": 6,
					"file": "source/Rooms.hx",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 8185,
						"regions":
						{
						},
						"selection":
						[
							[
								6094,
								6094
							]
						],
						"settings":
						{
							"haxe-build-id": 0,
							"syntax": "Packages/Haxe/Haxe.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 2637.0,
						"zoom_level": 1.0
					},
					"stack_index": 2,
					"type": "text"
				},
				{
					"buffer": 7,
					"file": "source/Objects.hx",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 27292,
						"regions":
						{
						},
						"selection":
						[
							[
								6027,
								6035
							]
						],
						"settings":
						{
							"haxe-build-id": 0,
							"syntax": "Packages/Haxe/Haxe.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 3291.0,
						"zoom_level": 1.0
					},
					"stack_index": 1,
					"type": "text"
				},
				{
					"buffer": 8,
					"file": "source/Todo",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 443,
						"regions":
						{
						},
						"selection":
						[
							[
								431,
								443
							]
						],
						"settings":
						{
							"auto_name": "Todo",
							"syntax": "Packages/Text/Plain text.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"type": "text"
				},
				{
					"buffer": 9,
					"file": "source/Characters.hx",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 9177,
						"regions":
						{
						},
						"selection":
						[
							[
								4329,
								4319
							]
						],
						"settings":
						{
							"haxe-build-id": 0,
							"syntax": "Packages/Haxe/Haxe.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 1890.0,
						"zoom_level": 1.0
					},
					"stack_index": 3,
					"type": "text"
				},
				{
					"buffer": 10,
					"file": "source/Countdown.hx",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1194,
						"regions":
						{
						},
						"selection":
						[
							[
								357,
								357
							]
						],
						"settings":
						{
							"haxe-build-id": 0,
							"syntax": "Packages/Haxe/Haxe.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 11,
					"type": "text"
				},
				{
					"buffer": 11,
					"file": "source/Game.hx",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 5284,
						"regions":
						{
						},
						"selection":
						[
							[
								2540,
								2542
							]
						],
						"settings":
						{
							"haxe-build-id": 0,
							"syntax": "Packages/Haxe/Haxe.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 799.0,
						"zoom_level": 1.0
					},
					"stack_index": 6,
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 22.0
	},
	"input":
	{
		"height": 0.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			]
		],
		"cols":
		[
			0.0,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"output.exec":
	{
		"height": 118.0
	},
	"output.find_results":
	{
		"height": 0.0
	},
	"pinned_build_system": "",
	"project": "spacegame.sublime-project",
	"replace":
	{
		"height": 40.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_symbol":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"selected_group": 0,
	"settings":
	{
	},
	"show_minimap": true,
	"show_open_files": false,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 231.0,
	"status_bar_visible": true,
	"template_settings":
	{
	}
}
